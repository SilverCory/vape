syntax = "proto3";

package protos;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

message User {
    string id = 1; // UUIDv4
    Timestamps timestamps = 2;
    string name = 3;
}

message ReviewLike {
    string id = 1;
    Review review = 2;
    User user = 3;
}

message Review {
    string id = 1; // UUIDv4
    Timestamps timestamps = 2;
    Product product = 3;
    User user = 4;
    string content = 5;
    repeated ReviewLike likes = 6;
}

message ProductImage {
    enum ProductImageType {
        PRODUCT_IMAGE_TYPE_UNKNOWN = 0;
    }

    string id = 1;
    ProductImageType type = 2;
    string url = 3;
}

message ProductLink {
    enum ProductLinkType {
        PRODUCT_LINK_TYPE_UNKNOWN = 0;
    }

    string id = 1;
    ProductLinkType type = 2;
    string url = 3;
}

message Product {
    string id = 1; // UUIDv4
    Timestamps timestamps = 2;
    string title = 3;
    string description = 4;
    repeated ProductImage images = 5;
    repeated ProductLink links = 6;
}

message Timestamps {
    google.protobuf.Timestamp created = 4;
    google.protobuf.Timestamp updated = 5;
}

service UsersService {
    rpc GetUser (GetUserRequest) returns (GetUserResponse) {
        option (google.api.http) = {
            post: "/v1/users/get"
            body: "*"
        };
    }
    rpc CreateUser (CreateUserRequest) returns (CreateUserResponse) {
        option (google.api.http) = {
            post: "/v1/users/create"
            body: "*"
        };
    }
    rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse) {
        option (google.api.http) = {
            post: "/v1/users/update"
            body: "*"
        };
    }
    rpc DeleteUser (DeleteUserRequest) returns (DeleteUserResponse) {
        option (google.api.http) = {
            post: "/v1/users/delete"
            body: "*"
        };
    }
    rpc ListUsers (ListUsersRequest) returns (ListUsersResponse) {
        option (google.api.http) = {
            post: "/v1/users/list"
            body: "*"
        };
    }
}

message GetUserRequest {
    User user = 1;
}
message GetUserResponse {
    User user = 1;
}

message CreateUserRequest {
    User user = 1;
}
message CreateUserResponse {}

message UpdateUserRequest {
    User user = 1;
}
message UpdateUserResponse {}

message DeleteUserRequest {
    User user = 1;
}
message DeleteUserResponse {}

message ListUsersRequest {}
message ListUsersResponse {
    repeated User users = 1;
}

service ReviewsService {
    rpc GetReview (GetReviewRequest) returns (GetReviewResponse) {
        option (google.api.http) = {
            post: "/v1/reviews/get"
            body: "*"
        };
    }
    rpc CreateReview (CreateReviewRequest) returns (CreateReviewResponse) {
        option (google.api.http) = {
            post: "/v1/reviews/create"
            body: "*"
        };
    }
    rpc UpdateReview (UpdateReviewRequest) returns (UpdateReviewResponse) {
        option (google.api.http) = {
            post: "/v1/reviews/update"
            body: "*"
        };
    }
    rpc DeleteReview (DeleteReviewRequest) returns (DeleteReviewResponse) {
        option (google.api.http) = {
            post: "/v1/reviews/delete"
            body: "*"
        };
    }
    rpc ListReviews (ListReviewsRequest) returns (ListReviewsResponse) {
        option (google.api.http) = {
            post: "/v1/reviews/list"
            body: "*"
        };
    }
    // todo decide if to add AddReviewLike endpoint
    rpc DeleteReviewLike (DeleteReviewLikeRequest) returns (DeleteReviewLikeResponse) {
        option (google.api.http) = {
            post: "/v1/reviews/likes/delete"
            body: "*"
        };
    }
}

message GetReviewRequest {
    Review review = 1;
}
message GetReviewResponse {
    Review review = 1;
}

message CreateReviewRequest {
    Review review = 1;
}
message CreateReviewResponse {}

message DeleteReviewRequest {
    Review review = 1;
}
message DeleteReviewResponse {}

message UpdateReviewRequest {
    Review review = 1;
}
message UpdateReviewResponse {}

message ListReviewsRequest {}
message ListReviewsResponse {
    repeated Review reviews = 1;
}

message DeleteReviewLikeRequest {
    ReviewLike like = 1;
}
message DeleteReviewLikeResponse {}

service ProductsService {
    rpc GetProduct (GetProductRequest) returns (GetProductResponse) {
        option (google.api.http) = {
            post: "/v1/products/get"
            body: "*"
        };
    }
    rpc CreateProduct (CreateProductRequest) returns (CreateProductResponse) {
        option (google.api.http) = {
            post: "/v1/products/create"
            body: "*"
        };
    }
    rpc UpdateProduct (UpdateProductRequest) returns (UpdateProductResponse) {
        option (google.api.http) = {
            post: "/v1/products/update"
            body: "*"
        };
    }
    rpc DeleteProduct (DeleteProductRequest) returns (DeleteProductResponse) {
        option (google.api.http) = {
            post: "/v1/products/delete"
            body: "*"
        };
    }
    rpc ListProducts (ListProductsRequest) returns (ListProductsResponse) {
        option (google.api.http) = {
            post: "/v1/products/list"
            body: "*"
        };
    }
}

message GetProductRequest {
    Product product = 1;
}
message GetProductResponse {
    Product product = 1;
}

message CreateProductRequest {
    Product product = 1;
}
message CreateProductResponse {}

message UpdateProductRequest {
    Product product = 1;
}
message UpdateProductResponse {}

message DeleteProductRequest {
    Product product = 1;
}
message DeleteProductResponse {}

message ListProductsRequest {}
message ListProductsResponse {
    repeated Product products = 1;
}

service SearchService {
    rpc Search (SearchRequest) returns (SearchResponse) {
        option (google.api.http) = {
            post: "/v1/search"
            body: "*"
        };
    }
}

message SearchRequest {
    string query = 1;
}
message SearchResponse {
    repeated User users = 1;
    repeated Review reviews = 2;
    repeated Product products = 3;
}